{"version":3,"sources":["App.jsx","redux/selectors.js","components/ButtonsInputs.js","redux/thunks.js","components/TaskContextMenu.jsx","components/TaskModal.jsx","components/Task.jsx","components/NewItemForm.jsx","components/Column.jsx","components/BoardHeader.jsx","components/Board.jsx","redux/reducers.js","store.js","index.js","redux/actions.js"],"names":["GlobalStyle","createGlobalStyle","AppContainer","styled","div","hot","module","getBoardLoading","state","taskBoard","isLoading","getData","currentData","getBoardName","currentBoard","getAllBoards","allBoards","FormContainer","TitleInput","input","SaveButton","button","CancelButton","ButtonsContainer","displayAlert","text","alert","updateTaskRequest","boardName","task","dispatch","a","body","JSON","stringify","updatedTask","fetch","id","headers","method","response","json","updatedBoard","updateCurrentBoard","deleteTaskRequest","taskId","parent","ContextMenuContainer","props","display","TaskTitleEdit","TaskEditContainer","ContextMenu","ul","MenuItem","li","connect","changeTaskTitle","deleteTask","setDisplay","setModalDisplay","useState","title","inputValue","setInputValue","taskRef","useRef","useEffect","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","changeTitle","ref","type","placeholder","value","onChange","onKeyDown","key","onInputEnter","onClick","ModalContainer","TaskInfoContainer","TitleDescriptionContainer","TitleContainer","Title","h2","DescriptionContainer","DescriptionHeaderContainer","DescriptionHeader","h3","DescriptionEditButton","Description","p","DescriptionEditContainer","DescriptionTextArea","textarea","MenuContainer","CloseButton","DeleteButton","updateTask","setTitle","description","setDescription","titleDisplay","setTitleDisplay","descriptionDisplay","setDescriptionDisplay","modalRef","titleRef","descriptionRef","onTitleChange","onDescriptionChange","onTitleEnter","rows","cols","TaskContainer","Task","index","taskDisplay","setTaskDisplay","modalDisplay","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","onContextMenu","preventDefault","NewItemButton","NewItemFormContainer","saveNewBoard","newBoard","addNewBoard","createBoardRequest","saveNewColumn","createColumnRequest","saveNewTask","createTaskRequest","formType","itemFormRef","saveNewItem","ColumnContainer","TitleEdit","TaskList","InnerList","memo","tasks","map","changeColumnTitle","column","updatedColumn","updateColumnRequest","deleteColumn","columnId","deleteColumnRequest","titleEditRef","window","confirm","droppableId","droppableProps","HeaderContainer","BoardTitle","h1","HeaderButton","ButtonsDivider","span","changeBoardTitle","updateBoardRequest","switchBoard","switchCurrentBoard","deleteBoard","boardToDelete","deleteBoardRequest","boardTitle","menuDisplay","setMenuDisplay","menuRef","board","name","BoardContainer","BoardItemsContainer","ColumnsContainer","taskMap","taskIds","data","loadBoardData","loadBoardInProgress","loadBoardSuccess","loadBoardFailure","loadCurrentBoard","handleColumnMove","result","moveColumnRequest","handleTaskMove","moveTaskRequest","boardContent","onDragEnd","destination","source","direction","columnOrder","columns","initialState","reducers","action","LOAD_BOARD_IN_PROGRESS","newState","LOAD_BOARD_SUCCESS","payload","LOAD_BOARD_FAILURE","UPDATE_CURRENT_BOARD","newAllBoards","Array","from","forEach","ADD_NEW_BOARD","newBoardInfo","concat","SWITCH_CURRENT_BOARD","newCurrentBoard","DELETE_BOARD","filter","length","persistConfig","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","App","getElementById"],"mappings":"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","file":"static/js/main.795d87e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport Board from './components/Board';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #619595;\r\n  }\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n  font-family: Roboto, sans-serif;\r\n  color: #556973;\r\n`;\r\n\r\nconst App = () => (\r\n  <>\r\n    <GlobalStyle />\r\n    <AppContainer>\r\n      <Board />\r\n    </AppContainer>\r\n  </>\r\n);\r\n\r\nexport default hot(module)(App);\r\n","export const getBoardLoading = (state) => state.taskBoard.isLoading;\r\n\r\nexport const getData = (state) => state.taskBoard.currentData;\r\n\r\nexport const getBoardName = (state) => state.taskBoard.currentBoard;\r\n\r\nexport const getAllBoards = (state) => state.taskBoard.allBoards;\r\n","import styled from 'styled-components';\r\n\r\nexport const FormContainer = styled.div`\r\n  min-height: 40px;\r\n  max-height: 66px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  margin-top: 8px;\r\n  background-color: #ebfff6;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  font-size: inherit;\r\n`;\r\n\r\nexport const TitleInput = styled.input`\r\n  font-size: inherit;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  border: 1px solid #5d737e;\r\n`;\r\n\r\nexport const SaveButton = styled.button`\r\n  background-color: #c0fdfb;\r\n  border: 1px solid #5d737e;\r\n  border-radius: 5px;\r\n  font-size: inherit;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #92dad4;\r\n  }\r\n`;\r\n\r\nexport const CancelButton = styled.button`\r\n  border: none;\r\n  background-color: inherit;\r\n  marign-left: 12px;\r\n  font-size: 20px;\r\n  color: #5d737e;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  font-size: inherit;\r\n  margin-top: 5px;\r\n  background-color: #ebfff6;\r\n`;\r\n","import {\r\n  loadBoardInProgress,\r\n  loadBoardSuccess,\r\n  loadBoardFailure,\r\n  updateCurrentBoard,\r\n  addNewBoard,\r\n  deleteBoard,\r\n} from './actions';\r\n\r\nconst displayAlert = (text) => () => {\r\n  alert(text);\r\n};\r\n\r\nexport const loadCurrentBoard = (boardName) => async (dispatch) => {\r\n  if (!boardName) {\r\n    return;\r\n  }\r\n  try {\r\n    dispatch(loadBoardInProgress());\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}`\r\n    );\r\n    const board = await response.json();\r\n    dispatch(loadBoardSuccess(board));\r\n  } catch (error) {\r\n    dispatch(loadBoardFailure());\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const createBoardRequest = (text) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ text: text });\r\n    const response = await fetch('http://localhost:8000/api/boards', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n      body,\r\n    });\r\n    const newBoard = await response.json();\r\n    dispatch(addNewBoard(newBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const createColumnRequest = (boardName, text) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ text: text });\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}/columns`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const createTaskRequest =\r\n  (boardName, text, parent) => async (dispatch) => {\r\n    try {\r\n      const body = JSON.stringify({ text: text, parent: parent });\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/boards/${boardName}/tasks`,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          body,\r\n        }\r\n      );\r\n      const updatedBoard = await response.json();\r\n      dispatch(updateCurrentBoard(updatedBoard));\r\n    } catch (error) {\r\n      dispatch(displayAlert(error));\r\n    }\r\n  };\r\n\r\nexport const updateBoardRequest = (boardName, text) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ text: text });\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'PUT',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const updateColumnRequest = (boardName, column) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ updatedColumn: column });\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}/columns/${column.id}`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'PUT',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const updateTaskRequest = (boardName, task) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ updatedTask: task });\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}/tasks/${task.id}`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'PUT',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const moveColumnRequest = (boardName, result) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(result);\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}/move-column`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const moveTaskRequest = (boardName, result) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(result);\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}/move-task`,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body,\r\n      }\r\n    );\r\n    const updatedBoard = await response.json();\r\n    dispatch(updateCurrentBoard(updatedBoard));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const deleteBoardRequest = (boardName) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `http://localhost:8000/api/boards/${boardName}`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n    const boardToDelete = await response.json();\r\n    dispatch(deleteBoard(boardToDelete));\r\n  } catch (error) {\r\n    dispatch(displayAlert(error));\r\n  }\r\n};\r\n\r\nexport const deleteColumnRequest =\r\n  (boardName, columnId) => async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/boards/${boardName}/columns/${columnId}`,\r\n        {\r\n          method: 'DELETE',\r\n        }\r\n      );\r\n      const updatedBoard = await response.json();\r\n      dispatch(updateCurrentBoard(updatedBoard));\r\n    } catch (error) {\r\n      dispatch(displayAlert(error));\r\n    }\r\n  };\r\n\r\nexport const deleteTaskRequest =\r\n  (boardName, taskId, parent) => async (dispatch) => {\r\n    try {\r\n      const body = JSON.stringify({ parent: parent });\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/boards/${boardName}/tasks/${taskId}`,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE',\r\n          body,\r\n        }\r\n      );\r\n      const updatedBoard = await response.json();\r\n      dispatch(updateCurrentBoard(updatedBoard));\r\n    } catch (error) {\r\n      dispatch(displayAlert(error));\r\n    }\r\n  };\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  FormContainer,\r\n  TitleInput,\r\n  SaveButton,\r\n  CancelButton,\r\n  ButtonsContainer,\r\n} from './ButtonsInputs';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTaskRequest, updateTaskRequest } from '../redux/thunks';\r\nimport { getBoardName } from '../redux/selectors';\r\n\r\nconst ContextMenuContainer = styled.div`\r\n  display: ${(props) => (props.display === 'contextMenu' ? 'flex' : 'none')};\r\n  width: fit-content;\r\n`;\r\n\r\nconst TaskTitleEdit = styled(TitleInput)`\r\n  width: 186px;\r\n`;\r\n\r\nconst TaskEditContainer = styled(FormContainer)`\r\n  display: ${(props) => (props.display === 'contextMenu' ? 'block' : 'none')};\r\n  padding-left: 0;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst ContextMenu = styled.ul`\r\n  list-style: none;\r\n  border: 1px solid #5d737e;\r\n  border-radius: 5px;\r\n  background-color: #fcfffd;\r\n  padding 8px;\r\n  margin-top: 0;\r\n  cursor: pointer;\r\n  z-index: 1;\r\n`;\r\n\r\nconst MenuItem = styled.li`\r\n  padding: 5px;\r\n  width: fit-content;\r\n  &:hover {\r\n    background-color: #ebfff6;\r\n  }\r\n`;\r\n\r\nconst TaskContextMenu = ({\r\n  task,\r\n  parent,\r\n  boardName,\r\n  display,\r\n  setDisplay,\r\n  setModalDisplay,\r\n  changeTaskTitle,\r\n  deleteTask,\r\n}) => {\r\n  const [inputValue, setInputValue] = useState(task.title);\r\n\r\n  const taskRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (\r\n        (taskRef.current && taskRef.current.contains(e.target)) ||\r\n        display === 'task'\r\n      ) {\r\n        return;\r\n      } else {\r\n        setDisplay('task');\r\n        setInputValue(task.title);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  const onInputEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      changeTitle();\r\n    }\r\n  };\r\n\r\n  const changeTitle = () => {\r\n    const updatedTask = {\r\n      ...task,\r\n      title: inputValue,\r\n    };\r\n    changeTaskTitle(boardName, updatedTask);\r\n    setDisplay('task');\r\n  };\r\n\r\n  return (\r\n    <ContextMenuContainer display={display} ref={taskRef}>\r\n      <TaskEditContainer display={display}>\r\n        <TaskTitleEdit\r\n          type=\"text\"\r\n          placeholder={task.title}\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyDown={(e) => onInputEnter(e)}\r\n        ></TaskTitleEdit>\r\n        <ButtonsContainer>\r\n          <SaveButton onClick={() => changeTitle()}>Save</SaveButton>\r\n          <CancelButton onClick={() => setDisplay('task')}>\r\n            &times;\r\n          </CancelButton>\r\n        </ButtonsContainer>\r\n      </TaskEditContainer>\r\n      <ContextMenu>\r\n        <MenuItem\r\n          onClick={() => {\r\n            setDisplay('task');\r\n            setModalDisplay('show');\r\n          }}\r\n        >\r\n          Details...\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            deleteTask(boardName, task.id, parent);\r\n          }}\r\n        >\r\n          Delete&nbsp;Task\r\n        </MenuItem>\r\n      </ContextMenu>\r\n    </ContextMenuContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boardName: getBoardName(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeTaskTitle: (boardName, task) =>\r\n    dispatch(updateTaskRequest(boardName, task)),\r\n  deleteTask: (boardName, taskId, parent) =>\r\n    dispatch(deleteTaskRequest(boardName, taskId, parent)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContextMenu);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  TitleInput,\r\n  SaveButton,\r\n  CancelButton,\r\n  ButtonsContainer,\r\n} from './ButtonsInputs';\r\nimport { connect } from 'react-redux';\r\nimport { getBoardName } from '../redux/selectors';\r\nimport { deleteTaskRequest, updateTaskRequest } from '../redux/thunks';\r\n\r\nconst ModalContainer = styled.div`\r\n  display: ${(props) => (props.display === 'show' ? 'block' : 'none')};\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nconst TaskInfoContainer = styled.div`\r\n  min-width: 280px;\r\n  max-width: 700px;\r\n  margin: 5% auto;\r\n  display: flex;\r\n  background-color: #ebfff6;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TitleDescriptionContainer = styled.div`\r\n  padding: 8px;\r\n  display: block;\r\n  min-height: 100px;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: inherit;\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n  padding: 8px;\r\n  display: ${(props) => (props.display === 'title' ? 'block' : 'none')};\r\n`;\r\nconst TaskTitleEdit = styled(TitleInput)`\r\n  font-weight: 700;\r\n  padding: 8px;\r\n  margin-top: 10px;\r\n  display: ${(props) => (props.display === 'input' ? 'block' : 'none')};\r\n`;\r\n\r\nconst DescriptionContainer = styled.div`\r\n  max-width: 500 px;\r\n  padding: 8px;\r\n`;\r\n\r\nconst DescriptionHeaderContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst DescriptionHeader = styled.h3`\r\n  margin: inherit;\r\n`;\r\n\r\nconst DescriptionEditButton = styled.button`\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n  font-size: inherit;\r\n  background-color: inherit;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #daffef;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  display: ${(props) => (props.display === 'description' ? 'block' : 'none')};\r\n`;\r\n\r\nconst DescriptionEditContainer = styled.div`\r\n  display: ${(props) => (props.display === 'input' ? 'block' : 'none')};\r\n`;\r\n\r\nconst DescriptionTextArea = styled.textarea`\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  width: 100%;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  display: block;\r\n  padding: 8px;\r\n  width: 100px;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background-color: inherit;\r\n  width: inherit;\r\n  font-size: 40px;\r\n  color: #5d737e;\r\n  border: none;\r\n  text-align: right;\r\n  display: block;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: inherit;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: inherit;\r\n  display: block;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #daffef;\r\n  }\r\n`;\r\n\r\nconst TaskModal = ({\r\n  task,\r\n  parent,\r\n  boardName,\r\n  display,\r\n  setDisplay,\r\n  updateTask,\r\n  deleteTask,\r\n}) => {\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  const [titleDisplay, setTitleDisplay] = useState('title');\r\n  const [descriptionDisplay, setDescriptionDisplay] = useState('description');\r\n\r\n  const modalRef = useRef();\r\n  const titleRef = useRef();\r\n  const descriptionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (\r\n        (modalRef.current && modalRef.current.contains(e.target)) ||\r\n        display === 'hide'\r\n      ) {\r\n        return;\r\n      } else {\r\n        onTitleChange();\r\n        onDescriptionChange();\r\n        setDisplay('hide');\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (\r\n        (titleRef.current && titleRef.current.contains(e.target)) ||\r\n        display === 'hide'\r\n      ) {\r\n        return;\r\n      } else {\r\n        onTitleChange();\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (\r\n        (descriptionRef.current && descriptionRef.current.contains(e.target)) ||\r\n        display === 'hide'\r\n      ) {\r\n        return;\r\n      } else {\r\n        onDescriptionChange();\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  const onTitleEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onTitleChange();\r\n    }\r\n  };\r\n\r\n  const onTitleChange = () => {\r\n    const updatedTask = {\r\n      ...task,\r\n      title: title,\r\n    };\r\n    updateTask(boardName, updatedTask);\r\n    setTitleDisplay('title');\r\n  };\r\n\r\n  const onDescriptionChange = () => {\r\n    const updatedTask = {\r\n      ...task,\r\n      description: description,\r\n    };\r\n    updateTask(boardName, updatedTask);\r\n    setDescriptionDisplay('description');\r\n  };\r\n\r\n  return (\r\n    <ModalContainer display={display}>\r\n      <TaskInfoContainer ref={modalRef}>\r\n        <TitleDescriptionContainer>\r\n          <TitleContainer>\r\n            <Title\r\n              display={titleDisplay}\r\n              onClick={() => setTitleDisplay('input')}\r\n            >\r\n              {task.title}\r\n            </Title>\r\n            <TaskTitleEdit\r\n              ref={titleRef}\r\n              type=\"text\"\r\n              value={title}\r\n              display={titleDisplay}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onKeyDown={(e) => onTitleEnter(e)}\r\n            ></TaskTitleEdit>\r\n          </TitleContainer>\r\n\r\n          <DescriptionContainer>\r\n            <DescriptionHeaderContainer>\r\n              <DescriptionHeader>Description</DescriptionHeader>\r\n              <DescriptionEditButton\r\n                onClick={() => setDescriptionDisplay('input')}\r\n              >\r\n                Edit\r\n              </DescriptionEditButton>\r\n            </DescriptionHeaderContainer>\r\n\r\n            <Description\r\n              display={descriptionDisplay}\r\n              onClick={() => setDescriptionDisplay('input')}\r\n            >\r\n              {task.description === ''\r\n                ? 'Add a description for this task'\r\n                : task.description}\r\n            </Description>\r\n            <DescriptionEditContainer\r\n              display={descriptionDisplay}\r\n              ref={descriptionRef}\r\n            >\r\n              <DescriptionTextArea\r\n                rows=\"10\"\r\n                cols=\"40\"\r\n                placeholder={task.description}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></DescriptionTextArea>\r\n              <ButtonsContainer>\r\n                <SaveButton onClick={() => onDescriptionChange()}>\r\n                  Save\r\n                </SaveButton>\r\n                <CancelButton\r\n                  onClick={() => setDescriptionDisplay('description')}\r\n                >\r\n                  &times;\r\n                </CancelButton>\r\n              </ButtonsContainer>\r\n            </DescriptionEditContainer>\r\n          </DescriptionContainer>\r\n        </TitleDescriptionContainer>\r\n        <MenuContainer>\r\n          <CloseButton onClick={() => setDisplay('hide')}>&times;</CloseButton>\r\n          <DeleteButton onClick={() => deleteTask(boardName, task.id, parent)}>\r\n            Delete Task\r\n          </DeleteButton>\r\n        </MenuContainer>\r\n      </TaskInfoContainer>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boardName: getBoardName(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateTask: (boardName, task) => dispatch(updateTaskRequest(boardName, task)),\r\n  deleteTask: (boardName, taskId, parent) =>\r\n    dispatch(deleteTaskRequest(boardName, taskId, parent)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport TaskContextMenu from './TaskContextMenu';\r\nimport TaskModal from './TaskModal';\r\n\r\nconst TaskContainer = styled.div`\r\n  border: 1px solid #5d737e;\r\n  background-color: #fcfffd;\r\n  border-radius: 10px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n  display: ${(props) => (props.display === 'task' ? 'block' : 'none')};\r\n  &:hover {\r\n    background-color: #c0fdfb;\r\n  }\r\n`;\r\n\r\nconst Task = ({ task, index, parent }) => {\r\n  const [taskDisplay, setTaskDisplay] = useState('task');\r\n  const [modalDisplay, setModalDisplay] = useState('hide');\r\n\r\n  return (\r\n    <>\r\n      <Draggable draggableId={task.id} index={index}>\r\n        {(provided, snapshot) => (\r\n          <TaskContainer\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            display={taskDisplay}\r\n            isDragging={snapshot.isDragging}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              setTaskDisplay('contextMenu');\r\n            }}\r\n            onClick={() => setModalDisplay('show')}\r\n          >\r\n            {task.title}\r\n          </TaskContainer>\r\n        )}\r\n      </Draggable>\r\n      <TaskContextMenu\r\n        task={task}\r\n        parent={parent}\r\n        display={taskDisplay}\r\n        setDisplay={setTaskDisplay}\r\n        setModalDisplay={setModalDisplay}\r\n      />\r\n      <TaskModal\r\n        task={task}\r\n        parent={parent}\r\n        display={modalDisplay}\r\n        setDisplay={setModalDisplay}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n  FormContainer,\r\n  TitleInput,\r\n  SaveButton,\r\n  CancelButton,\r\n  ButtonsContainer,\r\n} from './ButtonsInputs';\r\nimport {\r\n  createBoardRequest,\r\n  createColumnRequest,\r\n  createTaskRequest,\r\n} from '../redux/thunks';\r\n\r\nconst NewItemButton = styled.button`\r\n  width: 220px;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  margin-top: 8px;\r\n  color: #556973;\r\n  background-color: #ebfff6;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  font-size: inherit;\r\n  display: ${(props) => (props.display === 'button' ? 'block' : 'none')};\r\n  &:hover {\r\n    background-color: #daffef;\r\n  }\r\n`;\r\n\r\nconst NewItemFormContainer = styled(FormContainer)`\r\n  display: ${(props) => (props.display === 'form' ? 'inline-flex' : 'none')};\r\n  flex-direction: column;\r\n`;\r\n\r\nconst NewItemForm = ({\r\n  boardName,\r\n  formType,\r\n  parent = null,\r\n  saveNewBoard,\r\n  saveNewColumn,\r\n  saveNewTask,\r\n}) => {\r\n  const [display, setDisplay] = useState('button');\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const itemFormRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (itemFormRef.current.contains(e.target) || display === 'button') {\r\n        return;\r\n      } else {\r\n        saveNewItem();\r\n        setDisplay('button');\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  const onInputEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      saveNewItem();\r\n    }\r\n  };\r\n\r\n  const saveNewItem = () => {\r\n    if (inputValue) {\r\n      formType === 'board'\r\n        ? saveNewBoard(inputValue)\r\n        : formType === 'column'\r\n        ? saveNewColumn(boardName, inputValue)\r\n        : saveNewTask(boardName, inputValue, parent);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NewItemButton display={display} onClick={() => setDisplay('form')}>\r\n        + Add a new {formType}\r\n      </NewItemButton>\r\n      <NewItemFormContainer display={display} ref={itemFormRef}>\r\n        <TitleInput\r\n          type=\"text\"\r\n          placeholder={`Enter new ${formType}`}\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyDown={(e) => onInputEnter(e)}\r\n        ></TitleInput>\r\n        <ButtonsContainer>\r\n          <SaveButton onClick={() => saveNewItem()}>Save</SaveButton>\r\n          <CancelButton onClick={() => setDisplay('button')}>\r\n            &times;\r\n          </CancelButton>\r\n        </ButtonsContainer>\r\n      </NewItemFormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  saveNewBoard: (text) => dispatch(createBoardRequest(text)),\r\n  saveNewColumn: (boardName, text) =>\r\n    dispatch(createColumnRequest(boardName, text)),\r\n  saveNewTask: (boardName, text, parent) =>\r\n    dispatch(createTaskRequest(boardName, text, parent)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(NewItemForm);\r\n","import React, { useState, useRef, useEffect, memo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TitleInput } from './ButtonsInputs';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { connect } from 'react-redux';\r\nimport Task from './Task';\r\nimport NewItemForm from './NewItemForm';\r\nimport { deleteColumnRequest, updateColumnRequest } from '../redux/thunks';\r\n\r\nconst ColumnContainer = styled.div`\r\n  margin: 8px;\r\n  border: none;\r\n  background-color: #ebfff6;\r\n  border-radius: 10px;\r\n  width: 220px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 40px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  padding: 10px;\r\n  display: ${(props) => (props.display === 'title' ? 'block' : 'none')};\r\n`;\r\nconst TitleEdit = styled(TitleInput)`\r\n  padding: 10px;\r\n  width: 80%;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  display: ${(props) => (props.display === 'input' ? 'block' : 'none')};\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  color: darkgrey;\r\n  background-color: #ebfff6;\r\n  font-size: 22px;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  padding: 8px;\r\n  min-height: 100px;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst InnerList = memo(({ tasks, parent }) => {\r\n  return tasks.map((task, index) => (\r\n    <Task key={task.id} task={task} index={index} parent={parent} />\r\n  ));\r\n});\r\n\r\nconst Column = ({\r\n  boardName,\r\n  column,\r\n  index,\r\n  tasks,\r\n  changeColumnTitle,\r\n  deleteColumn,\r\n}) => {\r\n  const [title, setTitle] = useState(column.title);\r\n  const [titleDisplay, setTitleDisplay] = useState('title');\r\n\r\n  const titleEditRef = useRef();\r\n\r\n  const onInputEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onTitleChange();\r\n    }\r\n  };\r\n\r\n  const onTitleChange = () => {\r\n    const updatedColumn = {\r\n      ...column,\r\n      title: title,\r\n    };\r\n    changeColumnTitle(boardName, updatedColumn);\r\n    setTitleDisplay('title');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (titleEditRef.current.contains(e.target) || titleDisplay === 'title') {\r\n        return;\r\n      } else {\r\n        onTitleChange();\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={column.id} index={index}>\r\n      {(provided) => (\r\n        <ColumnContainer ref={provided.innerRef} {...provided.draggableProps}>\r\n          <TitleContainer>\r\n            <Title\r\n              {...provided.dragHandleProps}\r\n              display={titleDisplay}\r\n              onClick={() => setTitleDisplay('input')}\r\n            >\r\n              {title}\r\n            </Title>\r\n            <TitleEdit\r\n              type=\"text\"\r\n              ref={titleEditRef}\r\n              value={title}\r\n              display={titleDisplay}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onKeyDown={(e) => onInputEnter(e)}\r\n            />\r\n            <DeleteButton\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm('Delete this column and all associated tasks?')\r\n                ) {\r\n                  deleteColumn(boardName, column.id);\r\n                }\r\n              }}\r\n            >\r\n              &times;\r\n            </DeleteButton>\r\n          </TitleContainer>\r\n\r\n          <Droppable droppableId={column.id} type=\"task\">\r\n            {(provided) => (\r\n              <TaskList ref={provided.innerRef} {...provided.droppableProps}>\r\n                <InnerList tasks={tasks} parent={column.id} />\r\n                {provided.placeholder}\r\n              </TaskList>\r\n            )}\r\n          </Droppable>\r\n          <NewItemForm\r\n            boardName={boardName}\r\n            formType=\"task\"\r\n            parent={column.id}\r\n          />\r\n        </ColumnContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeColumnTitle: (boardName, column) =>\r\n    dispatch(updateColumnRequest(boardName, column)),\r\n  deleteColumn: (boardName, columnId) =>\r\n    dispatch(deleteColumnRequest(boardName, columnId)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Column);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TitleInput } from './ButtonsInputs';\r\nimport { connect } from 'react-redux';\r\nimport { getAllBoards } from '../redux/selectors';\r\nimport { deleteBoardRequest, updateBoardRequest } from '../redux/thunks';\r\nimport NewItemForm from './NewItemForm';\r\nimport { switchCurrentBoard } from '../redux/actions';\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 95px;\r\n  display: flex;\r\n  padding: 8px;\r\n  justify-content: space-between;\r\n  align-items: end;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\nmargin-top: auto;\r\n  font-size: 32px;\r\n  padding 10px;\r\n  align-items: end;\r\n`;\r\n\r\nconst BoardTitle = styled.h1`\r\n  font-size: inherit;\r\n  margin: 0;\r\n  color: #fcfffd;\r\n  background-color: #64b6ac;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: ${(props) => (props.display === 'title' ? 'block' : 'none')};\r\n`;\r\n\r\nconst TitleEdit = styled(TitleInput)`\r\n  padding: 10px;\r\n  font-weight: 700;\r\n  display: ${(props) => (props.display === 'input' ? 'block' : 'none')};\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  margin-top: auto;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: end;\r\n  position: relative;\r\n`;\r\n\r\nconst HeaderButton = styled.button`\r\n  background-color: #64b6ac;\r\n  color: #fcfffd;\r\n  font-size: inherit;\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ContextMenu = styled.ul`\r\n  font-size: 16px;\r\n  list-style: none;\r\n  background-color: #ebfff6;\r\n  border: 1px solid #5d737e;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 40px;\r\n  z-index: 1;\r\n  display: ${(props) => (props.display === 'menu' ? 'block' : 'none')};\r\n`;\r\n\r\nconst MenuItem = styled.li`\r\n  padding: 8px;\r\n  width: fit-content;\r\n  &:hover {\r\n    background-color: #daffef;\r\n  }\r\n`;\r\n\r\nconst ButtonsDivider = styled.span`\r\n  padding: 8px;\r\n  color: #fcfffd;\r\n`;\r\n\r\nconst BoardHeader = ({\r\n  boardName,\r\n  boardTitle,\r\n  allBoards,\r\n  changeBoardTitle,\r\n  switchBoard,\r\n  deleteBoard,\r\n}) => {\r\n  const [titleDisplay, setTitleDisplay] = useState('title');\r\n  const [menuDisplay, setMenuDisplay] = useState('hidden');\r\n  const [title, setTitle] = useState(boardTitle);\r\n\r\n  const titleRef = useRef();\r\n\r\n  const onInputEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      onTitleChange();\r\n    }\r\n  };\r\n\r\n  const onTitleChange = () => {\r\n    changeBoardTitle(boardName, title);\r\n    setTitleDisplay('title');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (titleRef.current.contains(e.target) || titleDisplay === 'title') {\r\n        return;\r\n      } else {\r\n        onTitleChange();\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  const menuRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (menuRef.current.contains(e.target) || menuDisplay === 'button') {\r\n        return;\r\n      } else {\r\n        setMenuDisplay('hidden');\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  });\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <TitleContainer>\r\n        <BoardTitle\r\n          display={titleDisplay}\r\n          onClick={() => setTitleDisplay('input')}\r\n        >\r\n          {title}\r\n        </BoardTitle>\r\n        <TitleEdit\r\n          type=\"text\"\r\n          ref={titleRef}\r\n          value={title}\r\n          display={titleDisplay}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          onKeyDown={(e) => onInputEnter(e)}\r\n        ></TitleEdit>\r\n      </TitleContainer>\r\n      <ButtonsContainer>\r\n        <HeaderButton onClick={() => setMenuDisplay('menu')}>\r\n          Change Board\r\n        </HeaderButton>\r\n        <ContextMenu display={menuDisplay} ref={menuRef}>\r\n          {allBoards.map((board) => {\r\n            if (board.name !== boardName) {\r\n              return (\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    setMenuDisplay('button');\r\n                    switchBoard(board.name);\r\n                  }}\r\n                >\r\n                  {board.title}\r\n                </MenuItem>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          <li>\r\n            <NewItemForm boardName={null} formType=\"board\" />\r\n          </li>\r\n        </ContextMenu>\r\n        <ButtonsDivider>|</ButtonsDivider>\r\n        <HeaderButton\r\n          onClick={() => {\r\n            if (window.confirm('Delete this board and all associated tasks?')) {\r\n              deleteBoard(boardName);\r\n            }\r\n          }}\r\n        >\r\n          Delete Board\r\n        </HeaderButton>\r\n      </ButtonsContainer>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allBoards: getAllBoards(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeBoardTitle: (boardName, text) =>\r\n    dispatch(updateBoardRequest(boardName, text)),\r\n  switchBoard: (boardName) => dispatch(switchCurrentBoard(boardName)),\r\n  deleteBoard: (boardName) => dispatch(deleteBoardRequest(boardName)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardHeader);\r\n","import React, { memo, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { connect } from 'react-redux';\r\nimport { getBoardLoading, getBoardName, getData } from '../redux/selectors';\r\nimport Column from './Column';\r\nimport NewItemForm from './NewItemForm';\r\nimport {\r\n  loadCurrentBoard,\r\n  moveColumnRequest,\r\n  moveTaskRequest,\r\n} from '../redux/thunks';\r\nimport BoardHeader from './BoardHeader';\r\n\r\nconst BoardContainer = styled.div`\r\n  display: block;\r\n  background-color: #619595;\r\n`;\r\n\r\nconst BoardItemsContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ColumnsContainer = styled.div`\r\n  display: flex;\r\n  align-items: start;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst InnerList = memo(({ boardName, column, index, taskMap }) => {\r\n  const tasks = column.taskIds.map((taskId) => taskMap[taskId]);\r\n  return (\r\n    <Column\r\n      key={column.id}\r\n      boardName={boardName}\r\n      column={column}\r\n      index={index}\r\n      tasks={tasks}\r\n    />\r\n  );\r\n});\r\n\r\nconst Board = ({\r\n  boardName,\r\n  data,\r\n  isLoading,\r\n  loadBoardData,\r\n  handleTaskMove,\r\n  handleColumnMove,\r\n}) => {\r\n  useEffect(() => {\r\n    loadBoardData(boardName);\r\n  }, [loadBoardData, boardName]);\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (\r\n      result.destination.droppableId === result.source.droppableId &&\r\n      result.destination.index === result.source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (result.type === 'task') {\r\n      handleTaskMove(data.name, result);\r\n    }\r\n    if (result.type === 'column') {\r\n      handleColumnMove(data.name, result);\r\n    }\r\n  };\r\n\r\n  const boardContent = (\r\n    <BoardContainer>\r\n      <BoardHeader boardName={boardName} boardTitle={data.title} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <BoardItemsContainer>\r\n          <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"column\">\r\n            {(provided) => (\r\n              <ColumnsContainer\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                data={data}\r\n              >\r\n                {data.columnOrder.map((columnId, index) => {\r\n                  const column = data.columns[columnId];\r\n\r\n                  return (\r\n                    <InnerList\r\n                      key={column.id}\r\n                      boardName={data.name}\r\n                      column={column}\r\n                      index={index}\r\n                      taskMap={data.tasks}\r\n                    />\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ColumnsContainer>\r\n            )}\r\n          </Droppable>\r\n          <NewItemForm boardName={data.name} formType=\"column\" />\r\n        </BoardItemsContainer>\r\n      </DragDropContext>\r\n    </BoardContainer>\r\n  );\r\n  return isLoading ? (\r\n    <h3>Loading board data...</h3>\r\n  ) : boardName ? (\r\n    boardContent\r\n  ) : (\r\n    <NewItemForm boardName={null} formType=\"board\" />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: getData(state),\r\n  boardName: getBoardName(state),\r\n  isLoading: getBoardLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadBoardData: (boardName) => {\r\n    dispatch(loadCurrentBoard(boardName));\r\n  },\r\n  handleColumnMove: (boardName, result) =>\r\n    dispatch(moveColumnRequest(boardName, result)),\r\n  handleTaskMove: (boardName, result) =>\r\n    dispatch(moveTaskRequest(boardName, result)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\r\n","import {\r\n  ADD_NEW_BOARD,\r\n  DELETE_BOARD,\r\n  LOAD_BOARD_FAILURE,\r\n  LOAD_BOARD_IN_PROGRESS,\r\n  LOAD_BOARD_SUCCESS,\r\n  SWITCH_CURRENT_BOARD,\r\n  UPDATE_CURRENT_BOARD,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  currentData: {},\r\n  currentBoard: '',\r\n  allBoards: [],\r\n};\r\n\r\nexport const taskBoard = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_BOARD_IN_PROGRESS: {\r\n      const newState = {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case LOAD_BOARD_SUCCESS: {\r\n      const board = action.payload;\r\n\r\n      const newState = {\r\n        ...state,\r\n        isLoading: false,\r\n        currentData: board,\r\n        currentBoard: board.name,\r\n      };\r\n\r\n      return newState;\r\n    }\r\n\r\n    case LOAD_BOARD_FAILURE: {\r\n      const newState = {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n      return newState;\r\n    }\r\n    case UPDATE_CURRENT_BOARD: {\r\n      const updatedBoard = action.payload;\r\n\r\n      if (updatedBoard.title !== state.currentData.title) {\r\n        const newAllBoards = Array.from(state.allBoards);\r\n        newAllBoards.forEach((board) => {\r\n          if (board.name === updatedBoard.name) {\r\n            board.title = updatedBoard.title;\r\n          }\r\n        });\r\n        const newState = {\r\n          ...state,\r\n          currentData: updatedBoard,\r\n          allBoards: newAllBoards,\r\n        };\r\n        return newState;\r\n      } else {\r\n        const newState = {\r\n          ...state,\r\n          currentData: updatedBoard,\r\n        };\r\n\r\n        return newState;\r\n      }\r\n    }\r\n    case ADD_NEW_BOARD: {\r\n      const newBoard = action.payload;\r\n      const newBoardInfo = {\r\n        name: newBoard.name,\r\n        title: newBoard.title,\r\n      };\r\n\r\n      const newState = {\r\n        ...state,\r\n        currentData: newBoard,\r\n        currentBoard: newBoard.name,\r\n        allBoards: state.allBoards.concat(newBoardInfo),\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case SWITCH_CURRENT_BOARD: {\r\n      const newCurrentBoard = action.payload;\r\n\r\n      const newState = {\r\n        ...state,\r\n        currentBoard: newCurrentBoard,\r\n      };\r\n      return newState;\r\n    }\r\n\r\n    case DELETE_BOARD: {\r\n      const boardToDelete = action.payload;\r\n\r\n      const newAllBoards = Array.from(state.allBoards).filter(\r\n        (board) => board.name !== boardToDelete.name\r\n      );\r\n\r\n      if (newAllBoards.length > 0) {\r\n        const newState = {\r\n          ...state,\r\n          currentBoard: newAllBoards[0].name,\r\n          allBoards: newAllBoards,\r\n        };\r\n\r\n        return newState;\r\n      } else {\r\n        return initialState;\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\r\nimport { taskBoard } from './redux/reducers';\r\nimport { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducers = {\r\n  taskBoard,\r\n};\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const configureStore = () =>\r\n  createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport App from './App';\n\nconst store = configureStore();\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","export const LOAD_BOARD_IN_PROGRESS = 'LOAD_BOARD_IN_PROGRESS';\r\nexport const loadBoardInProgress = () => ({\r\n  type: LOAD_BOARD_IN_PROGRESS,\r\n});\r\n\r\nexport const LOAD_BOARD_SUCCESS = 'LOAD_BOARD_SUCCESS';\r\nexport const loadBoardSuccess = (board) => ({\r\n  type: LOAD_BOARD_SUCCESS,\r\n  payload: board,\r\n});\r\n\r\nexport const LOAD_BOARD_FAILURE = 'LOAD_BOARD_FAILURE';\r\nexport const loadBoardFailure = () => ({\r\n  type: LOAD_BOARD_FAILURE,\r\n});\r\n\r\nexport const UPDATE_CURRENT_BOARD = 'UPDATE_CURRENT_BOARD';\r\nexport const updateCurrentBoard = (board) => ({\r\n  type: UPDATE_CURRENT_BOARD,\r\n  payload: board,\r\n});\r\n\r\nexport const ADD_NEW_BOARD = 'ADD_NEW_BOARD';\r\nexport const addNewBoard = (board) => ({\r\n  type: ADD_NEW_BOARD,\r\n  payload: board,\r\n});\r\n\r\nexport const SWITCH_CURRENT_BOARD = 'SWITCH_CURRENT_BOARD';\r\nexport const switchCurrentBoard = (boardName) => ({\r\n  type: SWITCH_CURRENT_BOARD,\r\n  payload: boardName,\r\n});\r\n\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const deleteBoard = (board) => ({\r\n  type: DELETE_BOARD,\r\n  payload: board,\r\n});\r\n"],"sourceRoot":""}